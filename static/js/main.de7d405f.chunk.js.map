{"version":3,"sources":["lib/helpers/serializer.js","lib/helpers/retry.js","lib/WebRTC.js","lib/helpers/BufferedEventEmitter.js","lib/Channel.js","lib/MultiChannel.js","lib/stores/SimpleStore.js","lib/index.js","utils.js","screens/Create.js","screens/Join.js","screens/Chat.js","App.js","index.js"],"names":["serializer","description","btoa","sdp","token","type","atob","retry","obj","key","func","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","t0","stop","WebRTC","config","classCallCheck","this","connection","_createConnection","dataChannel","createDataChannel","_configureDataChannel","createOffer","offer","setLocalDescription","Error","setRemoteDescription","createAnswer","answer","channel","store","get","sessionDescription","_getAnswerToken","_getSessionDescription","save","buffer","onmessage","e","data","push","onopen","connect","oniceconnectionstatechange","state","iceConnectionState","isDisconnected","isConnected","disconnect","_this","_callee7","_context7","getAnswer","sent","RTCPeerConnection","iceServers","Promise","resolve","onicecandidate","candidate","localDescription","binaryType","BufferedEventEmitter","possibleConstructorReturn","getPrototypeOf","call","_pendingEvents","event","hasListeners","esm_get","prototype","listener","isPending","it","filter","forEach","_ref","EventEmitter","Channel","arguments","length","undefined","uuid","_checkConnected","send","wasConnected","close","$waitAnswer","emit","_this2","_checkNotConnected","MultiChannel","channel1","channel2","_handleConnection","bind","assertThisInitialized","_handleDisconnection","_handleData","selectedChannel","_subscribeChannel","_clean","getOtherChannel","_this3","on","otherChannel","$waitChannel2","SimpleStore","url","api","axios","create","baseURL","headers","cache","concat","then","_adaptResponse","value","encodeURIComponent","response","urls","webrtc","lib","createChannel","_createChannel","_callee2","_context2","createSingleChannel","joinSingleChannel","abrupt","apply","joinChannel","_joinChannel","_callee3","_context3","_x","_createSingleChannel","_callee4","id","_ref2","_context4","createConnectionWithOffer","setConnectHandler","setDisconnectHandler","setWaitHandler","saveOffer","_x2","_joinSingleChannel","_callee5","_context5","getOffer","createConnectionWithAnswer","saveAnswer","ondatachannel","_ref3","_x3","setStore","newStore","setIceServers","newIceServers","utils","window","location","href","replace","hash","search","querystring","parse","Create","react_default","createElement","link","quickp2p","setState","Component","Join","inviteToken","Chat","messages","input","join","readOnly","rows","ref","textarea","style","width","onChange","target","onKeyDown","_addMessage","alert","focus","content","_this4","toConsumableArray","scrollTop","scrollHeight","App","route","startsWith","Create_Create","Join_Join","Chat_Chat","rel","_listener","addEventListener","forceUpdate","removeEventListener","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.de7d405f.chunk.js","sourcesContent":["export default {\r\n\tserialize(description) {\r\n\t\treturn btoa(description.sdp);\r\n\t},\r\n\r\n\tdeserialize(token, type) {\r\n\t\treturn { type, sdp: atob(token) };\r\n\t}\r\n};\r\n","export default (obj, key, func) => {\r\n\tobj[key] = async () => {\r\n\t\ttry {\r\n\t\t\tawait func();\r\n\t\t} catch (e) {\r\n\t\t\tif (obj[key]) obj[key]();\r\n\t\t}\r\n\t};\r\n\tobj[key]();\r\n};\r\n","import serializer from \"./helpers/serializer\";\nimport retry from \"./helpers/retry\";\n\nconst CHANNEL_NAME = \"data\";\nconst ANSWER_SUFFIX = \"-answer\";\n\nexport default class WebRTC {\n\tconstructor(config) {\n\t\tthis.config = config;\n\t}\n\n\tasync createConnectionWithOffer() {\n\t\ttry {\n\t\t\tconst connection = this._createConnection();\n\t\t\tconst dataChannel = connection.createDataChannel(CHANNEL_NAME);\n\t\t\tthis._configureDataChannel(dataChannel);\n\t\t\tconst offer = await connection.createOffer();\n\t\t\tawait connection.setLocalDescription(offer);\n\t\t\treturn { connection, dataChannel };\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"Error initializing channel: Cannot create offer\");\n\t\t}\n\t}\n\n\tasync createConnectionWithAnswer(offer) {\n\t\ttry {\n\t\t\tconst connection = this._createConnection();\n\t\t\tawait connection.setRemoteDescription(offer);\n\t\t\tconst answer = await connection.createAnswer();\n\t\t\tawait connection.setLocalDescription(answer);\n\t\t\treturn connection;\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"Error initializing channel: Cannot create answer\");\n\t\t}\n\t}\n\n\tasync getOffer(channel) {\n\t\ttry {\n\t\t\tconst sessionDescription = await this.store.get(channel.token);\n\t\t\treturn serializer.deserialize(sessionDescription, \"offer\");\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"Error joining channel: Cannot read offer data\");\n\t\t}\n\t}\n\n\tasync getAnswer(channel) {\n\t\ttry {\n\t\t\tconst sessionDescription = await this.store.get(\n\t\t\t\tthis._getAnswerToken(channel)\n\t\t\t);\n\t\t\treturn serializer.deserialize(sessionDescription, \"answer\");\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"Error joining channel: Cannot read answer data\");\n\t\t}\n\t}\n\n\tasync saveOffer(connection, channel) {\n\t\ttry {\n\t\t\tconst sessionDescription = await this._getSessionDescription(connection);\n\t\t\tawait this.store.save(channel.token, sessionDescription);\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"Error initializing channel: Cannot write offer data\");\n\t\t}\n\t}\n\n\tasync saveAnswer(connection, channel) {\n\t\ttry {\n\t\t\tconst sessionDescription = await this._getSessionDescription(connection);\n\t\t\tawait this.store.save(this._getAnswerToken(channel), sessionDescription);\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"Error initializing channel: Cannot write answer data\");\n\t\t}\n\t}\n\n\tsetConnectHandler(connection, dataChannel, channel) {\n\t\tthis._configureDataChannel(dataChannel);\n\t\tdataChannel.buffer = [];\n\n\t\tdataChannel.onmessage = (e) => {\n\t\t\tconst data = e.data;\n\t\t\tif (data) dataChannel.buffer.push(data);\n\t\t};\n\n\t\tdataChannel.onopen = () => channel.connect(connection, dataChannel);\n\t}\n\n\tsetDisconnectHandler(connection, channel) {\n\t\tconnection.oniceconnectionstatechange = (e) => {\n\t\t\tconst state = connection.iceConnectionState;\n\t\t\tconst isDisconnected =\n\t\t\t\tstate === \"failed\" || state === \"disconnected\" || state === \"closed\";\n\t\t\tif (channel.isConnected && isDisconnected) channel.disconnect();\n\t\t};\n\t}\n\n\tsetWaitHandler(connection, channel) {\n\t\tretry(channel, \"$waitAnswer\", async () => {\n\t\t\tconst answer = await this.getAnswer(channel);\n\t\t\tawait connection.setRemoteDescription(answer);\n\t\t});\n\t}\n\n\tget store() {\n\t\tconst { store } = this.config;\n\t\tif (!store) throw new Error(\"Store not set, use `.setStore(...)`\");\n\n\t\treturn store;\n\t}\n\n\t_createConnection() {\n\t\treturn new RTCPeerConnection({ iceServers: this.config.iceServers });\n\t}\n\n\t_getSessionDescription(connection) {\n\t\treturn new Promise((resolve) => {\n\t\t\tconnection.onicecandidate = (e) => {\n\t\t\t\tif (e.candidate !== null) return;\n\t\t\t\tresolve(serializer.serialize(connection.localDescription));\n\t\t\t};\n\t\t});\n\t}\n\n\t_getAnswerToken(channel) {\n\t\treturn channel.token + ANSWER_SUFFIX;\n\t}\n\n\t_configureDataChannel(dataChannel) {\n\t\tdataChannel.binaryType = \"arraybuffer\";\n\t}\n}\n","import EventEmitter from \"eventemitter3\";\n\nexport default class BufferedEventEmitter extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._pendingEvents = [];\n\t}\n\n\temit(event, data) {\n\t\tconst hasListeners = super.emit(event, data);\n\t\tif (!hasListeners) this._pendingEvents.push({ event, data });\n\t\treturn hasListeners;\n\t}\n\n\ton(event, listener) {\n\t\tsuper.on(event, listener);\n\n\t\tconst isPending = (it) => it.event === event;\n\t\tthis._pendingEvents\n\t\t\t.filter(isPending)\n\t\t\t.forEach(({ event, data }) => listener(data));\n\t\tthis._pendingEvents = this._pendingEvents.filter((it) => !isPending(it));\n\n\t\treturn this;\n\t}\n}\n","import BufferedEventEmitter from \"./helpers/BufferedEventEmitter\";\nimport uuid from \"uuid/v1\";\n\nexport default class Channel extends BufferedEventEmitter {\n\tconstructor(token = uuid()) {\n\t\tsuper();\n\n\t\tthis.token = token;\n\t\tthis.connection = null;\n\t\tthis.dataChannel = null;\n\t}\n\n\tsend(data) {\n\t\tthis._checkConnected();\n\n\t\tthis.dataChannel.send(data);\n\t}\n\n\tdisconnect() {\n\t\tconst wasConnected = this.isConnected;\n\t\tif (this.dataChannel) this.dataChannel.close();\n\t\tif (this.connection) this.connection.close();\n\n\t\tthis.connection = null;\n\t\tthis.dataChannel = null;\n\t\tthis.$waitAnswer = null;\n\t\tif (wasConnected) this.emit(\"disconnected\");\n\t}\n\n\tconnect(connection, dataChannel) {\n\t\tthis._checkNotConnected();\n\n\t\tthis.connection = connection;\n\t\tthis.dataChannel = dataChannel;\n\n\t\tconst run = (data) => this.emit(\"data\", data);\n\t\tif (dataChannel.buffer) {\n\t\t\tdataChannel.buffer.forEach(run);\n\t\t\tdelete dataChannel.buffer;\n\t\t}\n\n\t\tthis.dataChannel.onmessage = (e) => {\n\t\t\tconst data = e.data;\n\t\t\tif (!data) return;\n\n\t\t\tthis.emit(\"data\", data);\n\t\t};\n\t\tthis.emit(\"connected\");\n\t}\n\n\tget isConnected() {\n\t\treturn this.dataChannel !== null;\n\t}\n\n\t_checkConnected() {\n\t\tif (!this.isConnected) throw new Error(\"Error: Not connected\");\n\t}\n\n\t_checkNotConnected() {\n\t\tif (this.isConnected) throw new Error(\"Error: Already connected\");\n\t}\n}\n","import BufferedEventEmitter from \"./helpers/BufferedEventEmitter\";\n\nexport default class MultiChannel extends BufferedEventEmitter {\n\tconstructor(channel1, channel2) {\n\t\tsuper();\n\n\t\tthis._handleConnection = this._handleConnection.bind(this);\n\t\tthis._handleDisconnection = this._handleDisconnection.bind(this);\n\t\tthis._handleData = this._handleData.bind(this);\n\n\t\tthis.channel1 = channel1;\n\t\tthis.channel2 = null;\n\t\tthis.selectedChannel = null;\n\n\t\tthis._subscribeChannel(this.channel1, () => this.channel2);\n\t\tif (channel2) this.connect(channel2);\n\t}\n\n\tsend(data) {\n\t\tthis._checkConnected();\n\n\t\tthis.selectedChannel.send(data);\n\t}\n\n\tdisconnect() {\n\t\tthis.channel1.disconnect();\n\t\tif (this.channel2) this.channel2.disconnect();\n\t\tthis._clean();\n\t}\n\n\tconnect(channel2) {\n\t\tthis.channel2 = channel2;\n\t\tthis._subscribeChannel(this.channel2, () => this.channel1);\n\t}\n\n\tget token() {\n\t\treturn this.channel1.token;\n\t}\n\n\tget isConnected() {\n\t\treturn this.selectedChannel !== null;\n\t}\n\n\t_checkConnected() {\n\t\tif (!this.isConnected) throw new Error(\"Error: Not connected\");\n\t}\n\n\t_subscribeChannel(channel, getOtherChannel) {\n\t\tchannel\n\t\t\t.on(\"connected\", () => {\n\t\t\t\tthis._handleConnection(channel);\n\t\t\t})\n\t\t\t.on(\"disconnected\", () => {\n\t\t\t\tthis._handleDisconnection(channel, getOtherChannel());\n\t\t\t})\n\t\t\t.on(\"data\", this._handleData);\n\t}\n\n\t_handleConnection(channel) {\n\t\tif (this.isConnected) return;\n\n\t\tthis.selectedChannel = channel;\n\t\tthis.emit(\"connected\");\n\t}\n\n\t_handleDisconnection(channel, otherChannel) {\n\t\tconst wasConnected = this.isConnected;\n\n\t\tif (otherChannel && otherChannel.isConnected)\n\t\t\tthis.selectedChannel = otherChannel;\n\t\telse if (wasConnected) {\n\t\t\tthis._clean();\n\t\t\tthis.emit(\"disconnected\");\n\t\t}\n\t}\n\n\t_handleData(data) {\n\t\tthis.emit(\"data\", data);\n\t}\n\n\t_clean() {\n\t\tthis.selectedChannel = null;\n\t\tthis.$waitChannel2 = null;\n\t}\n}\n","import axios from \"axios\";\n\nexport default class SimpleStore {\n\tconstructor(url) {\n\t\tthis.api = axios.create({\n\t\t\tbaseURL: url,\n\t\t\theaders: { cache: \"no-cache\" }\n\t\t});\n\t}\n\n\tget(key) {\n\t\treturn this.api.get(`get/${key}`).then(this._adaptResponse);\n\t}\n\n\tsave(key, value) {\n\t\tconst data = encodeURIComponent(value);\n\t\treturn this.api.get(`set/${key}/${data}`).then(this._adaptResponse);\n\t}\n\n\t_adaptResponse(response) {\n\t\tconst { data } = response;\n\t\treturn data.value;\n\t}\n}\n","import WebRTC from \"./WebRTC\";\nimport Channel from \"./Channel\";\nimport MultiChannel from \"./MultiChannel\";\nimport SimpleStore from \"./stores/SimpleStore\";\nimport retry from \"./helpers/retry\";\n\nconst CHANNEL2_SUFFIX = \"-2\";\nconst config = {\n\tstore: null,\n\ticeServers: [{ urls: \"stun:stun.l.google.com:19302\" }]\n};\nconst webrtc = new WebRTC(config);\n\nexport { SimpleStore };\n\nexport default {\n\tasync createChannel() {\n\t\tconst channel1 = await this.createSingleChannel();\n\t\tconst channel = new MultiChannel(channel1);\n\n\t\tretry(channel, \"$waitChannel2\", async () => {\n\t\t\tconst channel2 = await this.joinSingleChannel(\n\t\t\t\tchannel.token + CHANNEL2_SUFFIX\n\t\t\t);\n\t\t\tchannel.connect(channel2);\n\t\t});\n\n\t\treturn channel;\n\t},\n\n\tasync joinChannel(token) {\n\t\tconst channel1 = await this.joinSingleChannel(token);\n\t\tconst channel2 = await this.createSingleChannel(token + CHANNEL2_SUFFIX);\n\n\t\treturn new MultiChannel(channel1, channel2);\n\t},\n\n\tasync createSingleChannel(id) {\n\t\tconst channel = new Channel(id);\n\n\t\tconst {\n\t\t\tconnection,\n\t\t\tdataChannel\n\t\t} = await webrtc.createConnectionWithOffer();\n\n\t\twebrtc.setConnectHandler(connection, dataChannel, channel);\n\t\twebrtc.setDisconnectHandler(connection, channel);\n\t\twebrtc.setWaitHandler(connection, channel);\n\n\t\tawait webrtc.saveOffer(connection, channel);\n\n\t\treturn channel;\n\t},\n\n\tasync joinSingleChannel(token) {\n\t\tconst channel = new Channel(token);\n\n\t\tconst offer = await webrtc.getOffer(channel);\n\t\tconst connection = await webrtc.createConnectionWithAnswer(offer);\n\t\tawait webrtc.saveAnswer(connection, channel);\n\n\t\tconnection.ondatachannel = ({ channel: dataChannel }) => {\n\t\t\twebrtc.setConnectHandler(connection, dataChannel, channel);\n\t\t};\n\t\twebrtc.setDisconnectHandler(connection, channel);\n\n\t\treturn channel;\n\t},\n\n\tsetStore(newStore) {\n\t\tconfig.store = newStore;\n\t},\n\n\tsetIceServers(newIceServers) {\n\t\tconfig.iceServers = newIceServers;\n\t}\n};\n","import querystring from \"querystring\";\r\n\r\nexport default {\r\n\tgetBaseUrl() {\r\n\t\treturn window.location.href\r\n\t\t\t.replace(window.location.hash, \"\")\r\n\t\t\t.replace(window.location.search, \"\");\r\n\t},\r\n\tgetQueryString() {\r\n\t\treturn querystring.parse(window.location.search.replace(\"?\", \"\"));\r\n\t}\r\n};\r\n","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\nimport quickp2p from \"../lib\";\r\n\r\nexport default class Create extends Component {\r\n\tstate = { token: null };\r\n\r\n\trender() {\r\n\t\tif (!this.state.token) return <div>Wait...</div>;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tSend this link to your peer and wait...\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<a href={this.link}>{this.link}</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tif (window.channel) window.channel.disconnect();\r\n\r\n\t\twindow.channel = this.channel = await quickp2p.createChannel();\r\n\t\tthis.setState({ token: this.channel.token });\r\n\r\n\t\tthis.channel.on(\"connected\", () => {\r\n\t\t\twindow.location.hash = \"#/chat\";\r\n\t\t});\r\n\t}\r\n\r\n\tget link() {\r\n\t\tconst url = utils.getBaseUrl();\r\n\t\treturn `${url}?token=${this.state.token}#/join`;\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\nimport quickp2p from \"../lib\";\r\n\r\nexport default class Join extends Component {\r\n\trender() {\r\n\t\tif (!this.inviteToken) return <div>Invalid token.</div>;\r\n\r\n\t\treturn <div>Wait...</div>;\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tif (!this.inviteToken) return;\r\n\t\tif (window.channel) window.channel.disconnect();\r\n\r\n\t\twindow.channel = this.channel = await quickp2p.joinChannel(\r\n\t\t\tthis.inviteToken\r\n\t\t);\r\n\r\n\t\tthis.channel.on(\"connected\", () => {\r\n\t\t\twindow.channel = this.channel;\r\n\t\t\twindow.location.hash = \"#/chat\";\r\n\t\t});\r\n\t}\r\n\r\n\tget inviteToken() {\r\n\t\treturn utils.getQueryString().token || null;\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\n\nexport default class Chat extends Component {\n\tstate = { messages: [], input: \"\" };\n\n\trender() {\n\t\tif (!window.channel) return <div>No connection.</div>;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<textarea\n\t\t\t\t\tvalue={this.state.messages.join(\"\\n\")}\n\t\t\t\t\treadOnly\n\t\t\t\t\trows={15}\n\t\t\t\t\tref={(textarea) => (this.textarea = textarea)}\n\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={this.state.input}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tthis.setState({ input: e.target.value });\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\tconst { input } = this.state;\n\n\t\t\t\t\t\tif (e.key === \"Enter\" && input) {\n\t\t\t\t\t\t\twindow.channel.send(input);\n\t\t\t\t\t\t\tthis.setState({ input: \"\" });\n\t\t\t\t\t\t\tthis._addMessage(`Me: ${input}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tref={(input) => (this.input = input)}\n\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst channel = window.channel;\n\t\tif (!channel) return;\n\n\t\tchannel.on(\"data\", (data) => {\n\t\t\tthis._addMessage(`Stranger: ${data}`);\n\t\t});\n\n\t\tchannel.on(\"disconnected\", () => {\n\t\t\talert(\"DISCONNECTED!\");\n\t\t\twindow.location.hash = \"#/\";\n\t\t});\n\n\t\tthis.input.focus();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (!window.channel) return;\n\n\t\twindow.channel.disconnect();\n\t\twindow.channel = undefined;\n\t}\n\n\t_addMessage(content) {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tmessages: [...this.state.messages, content]\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.textarea.scrollTop = this.textarea.scrollHeight;\n\t\t\t}\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport quickp2p, { SimpleStore } from \"./lib\";\nimport Create from \"./screens/Create\";\nimport Join from \"./screens/Join\";\nimport Chat from \"./screens/Chat\";\n\nquickp2p.setStore(\n\tnew SimpleStore(\"https://simple-key-value-store.herokuapp.com\")\n);\n\nexport default class App extends Component {\n\trender() {\n\t\tconst route = window.location.hash;\n\n\t\tif (route.startsWith(\"#/create\")) return <Create />;\n\t\tif (route.startsWith(\"#/join\")) return <Join />;\n\t\tif (route.startsWith(\"#/chat\")) return <Chat />;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Valid urls:</h1>\n\t\t\t\t<a href=\"#/create\">/#/create</a>\n\t\t\t\t<br />\n\t\t\t\t/#/join?token=INVITE_TOKEN\n\t\t\t\t<br />\n\t\t\t\t<br />>{\" \"}\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://github.com/rodri042/quickp2p\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tSource code and instructions\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis._listener = window.addEventListener(\"hashchange\", (e) => {\n\t\t\tthis.forceUpdate();\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"hashchange\", this._listener);\n\t}\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}